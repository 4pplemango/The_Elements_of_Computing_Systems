/** Implements a Dino Object. */
/* Information about dinosaur images needs to be encapsulated. */

class Dino {
    field int x, y; // screen location of the dino's top-left corner
    field int jumpCounts;
    field int jumpHeight;

    /** Constructs a new dino with a given location */
    constructor Dino new() {
        let x = 0;
        let y = 256-16;
        let jumpCounts = 0;
        let jumpHeight = 16*4;
        return this;
    }
 
    /** Disposes this dino. */
    method void dispose() {
        do Memory.deAlloc(this);
        return;
    }

    /** Calculate Y using jumpCounts. Use only once per tick. */
    method void calculateY() {
        var int height;
        if (jumpCounts = 0) { return; }
        if (((jumpCounts - 1) / jumpHeight) = 1) { let height = jumpHeight*2 - (jumpCounts - 1); }
        else { let height = jumpCounts - 1; }
        let y = y - height;
        let jumpCounts = jumpCounts - 1;
        return;
    }
 
    /** Jump dino. */
    method void jump() {
        if (jumpCounts = 0) { let jumpCounts = jumpHeight*2; }
        return;
    }

    /** Display dino. */
    method void display(Monitor monitor) {
        do monitor.clearDino(x, y);
        do calculateY();
        if (jumpCounts = 0) { do monitor.displayDino(x, y); }
        else { do monitor.displayDino(x, y); }
        return;
    }

    /** Fight with Terrain. You need to use display() before using this method. */
    method boolean fight(Terrain terrain) {
        return terrain.fightWithDino(x, y);
    }
}