// This file is part of www.nand2tetris.org
// and the book "The Elements of Computing Systems"
// by Nisan and Schocken, MIT Press.
// File name: projects/12/Math.jack

/**
 * A library of commonly used mathematical functions.
 * Note: Jack compilers implement multiplication and division using OS method calls.
 */
class Math {
    static Array twoToThe;
    static int remain;

    /** Initializes the library. */
    function void init() {
        var int index;
        let twoToThe = Array.new(16);
        let twoToThe[0] = 1;
        let index = 1;
        while (index < 16) {
            let twoToThe[index] = twoToThe[index - 1] + twoToThe[index - 1];
            let index = index + 1;
        }
        return;
    }

    /** Returns the absolute value of x. */
    function int abs(int x) {
        if (x < 0) {
            return -x;
        } else {
            return x;
        }
    }

    /** Returns the i-th bit of x. */
    function boolean bit(int x, int i) {
        var int tmp;
        let tmp = x & twoToThe[i];
        if (~(tmp = 0)) {
            return true;
        } else {
            return false;
        }
    }

    /** Returns the product of x and y. 
     *  When a Jack compiler detects the multiplication operator '*' in the 
     *  program's code, it handles it by invoking this method. In other words,
     *  the Jack expressions x*y and multiply(x,y) return the same value.
     */
    function int multiply(int x, int y) {
        var int sum, shiftedX;
        var int i;
        
        let sum = 0;
        let shiftedX = x;
        let i = 0;
        while (i < 16) {
            if (Math.bit(y, i)) {
                let sum = sum + shiftedX;
            }
            let shiftedX = shiftedX + shiftedX;
            let i = i + 1;
        }
        return sum;
    }

    /** Returns the integer part of x/y.
     *  When a Jack compiler detects the multiplication operator '/' in the 
     *  program's code, it handles it by invoking this method. In other words,
     *  the Jack expressions x/y and divide(x,y) return the same value.
     */
    function int divide(int x, int y) {
        var int q;
        var boolean neg;
        
        let neg = ~((x < 0) = (y < 0));

        let x = Math.abs(x);
        let y = Math.abs(y);

        if (y > x) {
            let remain = x;
            return 0;
        }

        let q = Math.divide(x, y + y);
        if (remain < y) {
            if (neg) {
                return -(q + q);
            } else {
                return (q + q);
            }
        } else {
            let remain = remain - y;
            if (neg) {
                return -(q + q + 1);
            } else {
                return (q + q + 1);
            }
        }
    }

    /** Returns the integer part of the square root of x. */
    function int sqrt(int x) {
        var int y;
        var int i;
        var int tmp;

        let y = 0;
        let i = 7;
        while (i > -1) {
            let tmp =  (y + twoToThe[i]) * (y + twoToThe[i]);
            if (~(tmp > x) & (tmp > 0)) {
                let y = y + twoToThe[i];
            }
            let i = i - 1;
        }
        return y;
    }

    /** Returns the greater number. */
    function int max(int a, int b) {
        if (a > b) {
            return a;
        } else {
            return b;
        }
    }

    /** Returns the smaller number. */
    function int min(int a, int b) {
        if (a < b) {
            return a;
        } else {
            return b;
        }
    }

    /** Returns the number of i squares of 2. */
    function int twoToThe(int i) {
        return twoToThe[i];
    }
}
